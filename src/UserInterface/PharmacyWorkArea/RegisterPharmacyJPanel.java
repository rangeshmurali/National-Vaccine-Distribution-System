/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.PharmacyWorkArea;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Enterprise.ProviderEnterprise;
import Business.Enterprise.PublicHealthEnterprise;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.EnrollmentRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;



public class RegisterPharmacyJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem ecoSystem;
    private UserAccount userAccount;
    private ProviderEnterprise providerEnterprise;
    
    public RegisterPharmacyJPanel(JPanel userProcessContainer, EcoSystem ecoSystem, UserAccount userAccount, ProviderEnterprise providerEnterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = ecoSystem;
        this.userAccount = userAccount;
        this.providerEnterprise = providerEnterprise;
        populateTable();
    }
    
    public void populateTable(){
        DefaultTableModel dtm = (DefaultTableModel) hospitalEnrollmentJTable.getModel();
        dtm.setRowCount(0);
        
        for(WorkRequest workRequest: userAccount.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[4];
            row[0] = workRequest;
            row[1] = workRequest.getSender();
            row[2] = workRequest.getReceiver();
            EnrollmentRequest enrollmentRequest = (EnrollmentRequest) workRequest;
            row[3] = enrollmentRequest.getEnrollmentRequest() == null ? "Waiting": enrollmentRequest.getEnrollmentRequest();
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        hospitalEnrollmentJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        enrollmentJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Register Pharmacy");

        hospitalEnrollmentJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Receiver", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(hospitalEnrollmentJTable);

        backJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        enrollmentJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        enrollmentJButton.setText("Enrollment Request");
        enrollmentJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enrollmentJButtonActionPerformed(evt);
            }
        });

        refreshJButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(329, 329, 329)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(backJButton, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(refreshJButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(enrollmentJButton)))))
                .addContainerGap(273, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enrollmentJButton)
                    .addComponent(refreshJButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(backJButton)
                .addGap(233, 233, 233))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void enrollmentJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enrollmentJButtonActionPerformed
        for(WorkRequest workRequest: userAccount.getWorkQueue().getWorkRequestList()){
            if(workRequest.getStatus().equalsIgnoreCase("Approved")){
                JOptionPane.showMessageDialog(null, "Enrollment request is already approved", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            } else if(workRequest.getStatus().equalsIgnoreCase("sent")){
                JOptionPane.showMessageDialog(null, "Enrollment request is already sent and waiting to be approved", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        EnrollmentRequest enrollmentRequest = new EnrollmentRequest();
        enrollmentRequest.setRequestType("Enrollment Request");
        enrollmentRequest.setStatus("Sent");
        enrollmentRequest.setSender(userAccount);
        UserAccount ua = (UserAccount) enrollmentRequest.getSender();
        Employee employee = (Employee) ua.getEmployee();
        employee.setEnrollmentStatus("Processing");
        employee.getPharmacy().setPharmacyStatus("Processing");
        Enterprise enterprise = null;
        Network net = null;
        for(Network network : ecoSystem.getNetworkDirectory()){
            for(Enterprise ent : network.getEnterpriseDirectory().getEnterprisesDirectory()){
                if(ent == providerEnterprise){
                    net = network;
                }
            }
        }
        for(Enterprise ent : net.getEnterpriseDirectory().getEnterprisesDirectory()){
            if(ent instanceof PublicHealthEnterprise){
                enterprise = ent;
                break;
            }
        }
        if(enterprise!=null){
            enterprise.getWorkQueue().getWorkRequestList().add(enrollmentRequest);
            userAccount.getWorkQueue().getWorkRequestList().add(enrollmentRequest);
            populateTable();
        }
        JOptionPane.showMessageDialog(null, "Enrolment is requested successfully", "Enrollment Request", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_enrollmentJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton enrollmentJButton;
    private javax.swing.JTable hospitalEnrollmentJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshJButton;
    // End of variables declaration//GEN-END:variables
}
